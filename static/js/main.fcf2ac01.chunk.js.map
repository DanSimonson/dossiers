{"version":3,"sources":["Components/CharPoses/charPoses.js","Views/Profiles.js","FirebaseConfig.js","Views/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["charPoses","exit","opacity","y","enter","delay","_ref","charIndex","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","Profiles","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gotData","docData","setState","documents","loaded","changeView","file","console","log","url2","state","window","scrollTo","setTimeout","isVisible","openHeader","change","docsID","id","seconds","url","identifier","toggle","inherits","createClass","key","value","_this2","collection","get","then","snapshot","docs","forEach","doc","push","data","_this3","react_default","a","createElement","className","map","document","index","src","name","alias","birthplace","citizenship","onClick","react_pose_text_es","initialPose","pose","Component","Dashboard","apply","arguments","App","react_router_dom","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcf2ac01.chunk.js","sourcesContent":["const charPoses = {\r\n  exit: { opacity: 0, y: 20 },\r\n  enter: {\r\n    opacity: 1,\r\n    y: 0,\r\n    delay: ({ charIndex }) => charIndex * 50\r\n  }\r\n};\r\nexport default charPoses","import React, { Component } from 'react'\r\nimport './Profiles.css'\r\nimport { Image } from 'react-bootstrap'\r\nimport charPoses from '../Components/CharPoses/charPoses'\r\nimport SplitText from 'react-pose-text';\r\nimport firebase from 'firebase';\r\nimport { firebaseApp } from '../FirebaseConfig'\r\nconst db = firebaseApp.firestore()\r\nexport class Profiles extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      documents: [],\r\n      loaded: false,\r\n      change: false,\r\n      openHeader: true,\r\n      docsID: '',\r\n      identifier: '',\r\n      url: '',\r\n      isVisible: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let docData = []\r\n    //toggle view to ensure correct view\r\n    if (this.state.change === true) {\r\n      this.setState({\r\n        change: !this.state.change,\r\n      })\r\n    }\r\n\r\n    db.collection(\"dossier\").get().then((snapshot) => {\r\n      snapshot.docs.forEach((doc) => {\r\n        docData.push(doc.data());\r\n      })\r\n      this.gotData(docData)\r\n    });\r\n  }\r\n\r\n  gotData = (docData) => {\r\n    this.setState({ documents: docData }, () => {\r\n      this.setState({ loaded: true })\r\n    })\r\n  }\r\n  \r\n  changeView = (file) => {\r\n    console.log('doc: ', file.url2)\r\n    let documents = this.state.documents\r\n    let doc = [];\r\n    let i;\r\n    window.scrollTo(0, 0);\r\n    //toggle view\r\n    setTimeout(() => {this.setState({ isVisible: !this.state.isVisible })}, 2000)\r\n\r\n    this.setState({\r\n      openHeader: !this.state.openHeader,\r\n      change: !this.state.change,\r\n      docsID: file.id.seconds,\r\n      url: file.url2\r\n    }, () => {     \r\n      switch (this.state.docsID) {\r\n        case 1555677208:\r\n          this.setState({\r\n            identifier: 'iron man'\r\n          })\r\n          break;\r\n        case 1555676592:\r\n          this.setState({\r\n            identifier: 'captain america'\r\n          })\r\n          break;\r\n        case 1555756408:\r\n          this.setState({\r\n            identifier: 'black widow'\r\n          })\r\n          break;\r\n        case 1555057404:\r\n          this.setState({\r\n            identifier: 'hulk'\r\n          })\r\n          break;\r\n        case 1555319543:\r\n          this.setState({\r\n            identifier: 'thor'\r\n          })\r\n          break;\r\n        default:\r\n        // code block\r\n      }\r\n    })\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      change: !this.state.change,\r\n      openHeader: !this.state.openHeader,\r\n      isVisible: !this.state.isVisible\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.openHeader &&\r\n          <div className=\"header\"></div>\r\n        }\r\n        {this.state.loaded && !this.state.change ?\r\n          this.state.documents.map((document, index) =>\r\n            <div id=\"content\">\r\n              <div className='one'>\r\n                <img src={document.url} />\r\n              </div>\r\n              <div className='two'>\r\n                <p>\r\n                  <h3>{document.name}</h3>\r\n                </p>\r\n                <p>\r\n                  <h2>alias: {document.alias}</h2>\r\n                </p>\r\n                <p>\r\n                  <span>Place of Birth: {document.birthplace}</span>\r\n                </p>\r\n                <p>\r\n                  <span>Citizenship: {document.citizenship}</span>\r\n                </p>\r\n                {/**onClick={() => this.changeView(document)} */}\r\n                <button onClick={() => this.changeView(document)} className=\"butn\">Intelligence Dossier: Top Secret Clearance Required</button>\r\n              </div>\r\n            </div>\r\n          ) : null\r\n        }\r\n        {this.state.change &&\r\n          <div>\r\n            {this.state.identifier === 'iron man' &&\r\n              <div> \r\n              <div className='my-url'>\r\n                <img src={this.state.url} />\r\n              </div>\r\n              {this.state.isVisible && <div className=\"container\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                  Tony Stark is a genius inventor capable of conceiving and building scientific advancements far ahead of cutting edge technology. His Iron Man suit has impenetrable armor protection with refined flight capability. The reactor powers both his pacemaker and the metal alloy suit. His weapons include energy beam repulsors and smart missiles\r\n                </SplitText>\r\n              </div>}              \r\n              </div>\r\n            }\r\n            {this.state.identifier === 'captain america' &&\r\n              <div> \r\n              <div className='my-url'>\r\n                <img src={this.state.url} />\r\n              </div>\r\n              {this.state.isVisible && <div className=\"container\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                  Captain America is a superior soldier. Due to Super Soldier Serum, Roger's is the first enhanced human being - body and mind. All physical attributes as well as cognitive abilities have been heightened to peak efficiency. He can self-heal. All thes attributes along with his proficiency in most martial arts and his uniquely designed shield makes him one of earth's finest human combatants.\r\n                </SplitText>\r\n              </div>\r\n              }\r\n              </div>\r\n            }\r\n            {this.state.identifier === 'black widow' &&\r\n              <div> \r\n              <div className='my-url'>\r\n                <img src={this.state.url} />\r\n              </div>\r\n              {this.state.isVisible && <div className=\"container\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                  Black Widow is highly trained in various martial arts. An expert acrobat, Olympic class gymnast, athlete and aerialist, excelling at marksmanship and knife throwing as well as being a master interrogator and tactician. Talented hacker, seductress and assassin. she has mastered skills in espionage infiltration, disguise and demolition.\r\n                </SplitText>\r\n              </div>\r\n              }\r\n              </div>\r\n            }\r\n            {this.state.identifier === 'hulk' &&\r\n              <div> \r\n              <div className='my-url'>\r\n                <img src={this.state.url} />\r\n              </div>\r\n              {this.state.isVisible && <div className=\"container\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                  When Bruce Banner becomes the Hulk, he is an unstoppable beast of near unlimited strength, power, and destruction. He is able to leap great distances and is incredibly fast and can run great distances at extreme speeds. He generally travels by jumping. The hulk is nearly impervious to most forms of damage. when the Hulk is damaged, he heals quickly.\r\n                </SplitText>\r\n              </div>\r\n              }\r\n              </div>\r\n            }\r\n            {this.state.identifier === 'thor' &&\r\n              <div> \r\n              <div className='my-url'>\r\n                <img src={this.state.url} />\r\n              </div>\r\n              {this.state.isVisible && <div className=\"container\">\r\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\r\n                  Thor has superhuman strength, speed, and endurance. He Wields the enchanted Uru-forged hammer Mjolnir, which grants mastery over the elements of thunder and lightning, as well as the ability to fly and open interdimensional gateways. He possesses superhuman healing in addition to his near invulnerability to injury.\r\n                </SplitText>\r\n              </div>\r\n              }\r\n              </div>\r\n            }\r\n            {this.state.isVisible && <div className='button-wrapper'>\r\n              <button onClick={this.toggle} className=\"butnn\">Return To Dossiers</button>\r\n              </div>\r\n            }\r\n             \r\n          </div>\r\n           \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Profiles\r\n","import firebase from 'firebase'\r\n\r\nconst Config = {\r\n  apiKey: \"AIzaSyC7AnbiZol5oYL_olPmknKza_g-oKTtojI\",\r\n  authDomain: \"all-purpose-238011.firebaseapp.com\",\r\n  databaseURL: \"https://all-purpose-238011.firebaseio.com\",\r\n  projectId: \"all-purpose-238011\",\r\n  storageBucket: \"all-purpose-238011.appspot.com\",\r\n  messagingSenderId: \"19979990333\"\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(Config)\r\n\r\nexport { firebaseApp }","import React, { Component } from 'react'\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react';\nimport './App.css';\n//import { Navbar, Container, Row, Col, Image, } from 'react-bootstrap'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\n//import StickyFooter from 'react-sticky-footer';\nimport Profiles from './Views/Profiles';\n//import { color } from 'style-value-types';\nimport Dashboard from './Views/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <div className=\"App\">\n            <Route exact path='/' component={Profiles} />\n            <Route exact path='/dashboard' component={Dashboard} />\n          </div>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Bootstrap from 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}